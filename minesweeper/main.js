(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var s=n.getElementsByTagName("script");if(s.length)for(var a=s.length-1;a>-1&&!t;)t=s[a--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();e.p;class t{node;constructor({tagName:e="div",className:t=[],textContent:n="",parentNode:s}){this.node=document.createElement(e),this.node.textContent=n,this.addClass(t),s&&s.append(this.node)}append(...e){for(let t of e)this.node.append(t.getElement())}getElement(){return this.node}addClass(e){(function e(t){if(Array.isArray(t))for(let n of t)e.call(this,n);else{if(""===t)return;this.node.classList.add(t)}}).call(this,e)}removeClass(e){this.node.classList.remove(e)}toggleClass(e){this.node.classList.toggle(e)}destroy(){this.node.remove()}}class n extends t{constructor(){super({className:["minesweeper"]})}}class s extends t{iconComponent=null;constructor({textContent:e,a11yLabel:n,iconComponent:s,className:a=[]}){if(super({tagName:"button",className:[a,"button"],textContent:e}),this.iconComponent=s,this.iconComponent&&this.append(this.iconComponent),n){const e=new t({tagName:"span",className:"visually-hidden",textContent:n});this.append(e)}}switchIcon(e){this.iconComponent?(this.iconComponent.getElement().replaceWith(e.getElement()),this.iconComponent=e):(this.iconComponent=e,this.append(this.iconComponent))}}class a extends t{constructor({className:e=[],min:t="0",max:n="10",value:s="0",step:a="1"}){super({tagName:"input",className:[e,"range-slider"]}),this.node.setAttribute("type","range"),this.node.setAttribute("min",t.toString()),this.node.setAttribute("max",n.toString()),this.node.setAttribute("value",s.toString()),this.node.setAttribute("step",a.toString())}getValue(){return this.node.value}setValue(e){this.node.value=e}}class o extends t{constructor({className:e="svg-icon",template:t}){super({}),this.node=function(e){const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}(t),this.node.classList.add(e)}}class i extends t{constructor({icon:e,className:n=[],min:s,max:i,value:l}){super({className:[n,"button-expandable","button"]}),e&&this.append(new o(e)),this.rangeInputComponent=new a({min:s,max:i,value:l}),this.outputField=new t({tagName:"output",className:"button-expandable__output"}),this.append(this.outputField,this.rangeInputComponent)}getSliderValue(){return this.rangeInputComponent.getValue()}setSliderValue(e){this.rangeInputComponent.setValue(e)}setOutputValue(e){this.outputField.getElement().textContent=e}}class l extends t{constructor({tagName:e,className:n,items:s}){if(super({tagName:e,className:n}),!s)throw new Error("items have not been added");for(let e of s){if(!(e instanceof t))throw new Error("item is not a component");{const n=new t({tagName:"li"});n.append(e),this.append(n)}}}}const r={DAY:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <g fill-rule="evenodd" clip-path="url(#a)" clip-rule="evenodd">\n    <path d="M12 8a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-6 4a6 6 0 1 1 12 0 6 6 0 0 1-12 0ZM12 0a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0V1a1 1 0 0 1 1-1ZM12 20a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0v-2a1 1 0 0 1 1-1ZM3.513 3.513a1 1 0 0 1 1.414 0l1.42 1.42a1 1 0 0 1-1.414 1.414l-1.42-1.42a1 1 0 0 1 0-1.414ZM17.653 17.653a1 1 0 0 1 1.414 0l1.42 1.42a1 1 0 0 1-1.414 1.414l-1.42-1.42a1 1 0 0 1 0-1.414ZM0 12a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1ZM20 12a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2h-2a1 1 0 0 1-1-1ZM6.347 17.653a1 1 0 0 1 0 1.414l-1.42 1.42a1 1 0 0 1-1.414-1.414l1.42-1.42a1 1 0 0 1 1.414 0ZM20.487 3.513a1 1 0 0 1 0 1.414l-1.42 1.42a1 1 0 1 1-1.414-1.414l1.42-1.42a1 1 0 0 1 1.414 0Z"/>\n  </g>\n  <defs>\n    <clipPath id="a">\n      <path fill="#fff" d="M0 0h24v24H0z"/>\n    </clipPath>\n  </defs>\n</svg>\n',LIST:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M3.87868 1.87868C4.44129 1.31607 5.20435 1 6 1H14C14.2652 1 14.5196 1.10536 14.7071 1.29289L20.7071 7.29289C20.8946 7.48043 21 7.73478 21 8V20C21 20.7957 20.6839 21.5587 20.1213 22.1213C19.5587 22.6839 18.7957 23 18 23H6C5.20435 23 4.44129 22.6839 3.87868 22.1213C3.31607 21.5587 3 20.7957 3 20V4C3 3.20435 3.31607 2.44129 3.87868 1.87868ZM6 3C5.73478 3 5.48043 3.10536 5.29289 3.29289C5.10536 3.48043 5 3.73478 5 4V20C5 20.2652 5.10536 20.5196 5.29289 20.7071C5.48043 20.8946 5.73478 21 6 21H18C18.2652 21 18.5196 20.8946 18.7071 20.7071C18.8946 20.5196 19 20.2652 19 20V9H14C13.4477 9 13 8.55228 13 8V3H6ZM15 4.41421L17.5858 7H15V4.41421ZM7 9C7 8.44772 7.44772 8 8 8H10C10.5523 8 11 8.44772 11 9C11 9.55228 10.5523 10 10 10H8C7.44772 10 7 9.55228 7 9ZM7 13C7 12.4477 7.44772 12 8 12H16C16.5523 12 17 12.4477 17 13C17 13.5523 16.5523 14 16 14H8C7.44772 14 7 13.5523 7 13ZM7 17C7 16.4477 7.44772 16 8 16H16C16.5523 16 17 16.4477 17 17C17 17.5523 16.5523 18 16 18H8C7.44772 18 7 17.5523 7 17Z"/>\n  </svg>\n  ',MARK:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M20.707 5.293a1 1 0 0 1 0 1.414l-11 11a1 1 0 0 1-1.414 0l-5-5a1 1 0 1 1 1.414-1.414L9 15.586 19.293 5.293a1 1 0 0 1 1.414 0Z" clip-rule="evenodd"/>\n</svg>\n',MINE:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n  <path fill="none" d="M0 0h24v24H0z"/>\n  <path fill-rule="evenodd" d="M23 12a1 1 0 0 1-1 1h-4.09a5.69 5.69 0 0 1-1 2.48l.06.06 2.83 2.83a1 1 0 0 1-1.42 1.42L15.53 17l-.06-.06a5.69 5.69 0 0 1-2.48 1A.28.28 0 0 1 13 18v4a1 1 0 0 1-2 0v-4a.28.28 0 0 1 0-.09 5.69 5.69 0 0 1-2.48-1l-.05.09-2.83 2.78a1 1 0 0 1-1.42-1.42l2.83-2.83.06-.06a5.69 5.69 0 0 1-1-2.48H2a1 1 0 0 1 0-2h4.09a5.69 5.69 0 0 1 1-2.48l-.06-.06-2.81-2.81a1 1 0 0 1 1.42-1.42l2.83 2.83.06.06a5.69 5.69 0 0 1 2.48-1A.28.28 0 0 1 11 6V2a1 1 0 0 1 2 0v4a.28.28 0 0 1 0 .09 5.69 5.69 0 0 1 2.48 1l.06-.06 2.83-2.83a1 1 0 1 1 1.42 1.42L17 8.47l-.06.06a5.69 5.69 0 0 1 1 2.48H22a1 1 0 0 1 1 .99Z"/>\n</svg>\n',NIGHT:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M12.081 2.509a1 1 0 0 1-.067 1.085 6 6 0 0 0 8.392 8.392 1 1 0 0 1 1.59.896A10 10 0 1 1 11.118 2.004a1 1 0 0 1 .963.505Zm-2.765 1.93a8 8 0 1 0 10.245 10.245A7.999 7.999 0 0 1 9.316 4.439Z" clip-rule="evenodd"/>\n</svg>\n',SETTINGS:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <g fill-rule="evenodd" clip-path="url(#a)" clip-rule="evenodd">\n    <path d="M12 10a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-4 2a4 4 0 1 1 8 0 4 4 0 0 1-8 0Z"/>\n    <path d="M12 2a1 1 0 0 0-1 1v.174a2.65 2.65 0 0 1-1.606 2.425 1 1 0 0 1-.264.073 2.65 2.65 0 0 1-2.73-.607l-.007-.008-.06-.06a1.003 1.003 0 0 0-1.415 0h-.001a1 1 0 0 0 0 1.415l.068.069a2.65 2.65 0 0 1 .542 2.894 2.65 2.65 0 0 1-2.414 1.705H3a1 1 0 0 0 0 2h.174a2.65 2.65 0 0 1 2.423 1.601 2.65 2.65 0 0 1-.532 2.918l-.008.008-.06.06a1.003 1.003 0 0 0-.217 1.09 1 1 0 0 0 .217.325v.001a.999.999 0 0 0 1.415 0l.069-.068a2.65 2.65 0 0 1 2.894-.543 2.65 2.65 0 0 1 1.705 2.415V21a1 1 0 0 0 2 0V20.826a2.65 2.65 0 0 1 1.601-2.423 2.65 2.65 0 0 1 2.918.532l.008.008.06.06a1.002 1.002 0 0 0 1.415 0h.001a1 1 0 0 0 0-1.416l-.068-.068a2.65 2.65 0 0 1-.532-2.918A2.65 2.65 0 0 1 20.906 13H21a1 1 0 0 0 0-2H20.826a2.65 2.65 0 0 1-2.425-1.606.999.999 0 0 1-.073-.264 2.65 2.65 0 0 1 .607-2.73l.008-.007.06-.06a1.002 1.002 0 0 0 0-1.415v-.001a1 1 0 0 0-1.416 0l-.068.068a2.65 2.65 0 0 1-2.918.532A2.65 2.65 0 0 1 13 3.094V3a1 1 0 0 0-1-1ZM9.879.879A3 3 0 0 1 15 3v.087a.65.65 0 0 0 .394.594l.01.004a.65.65 0 0 0 .714-.127l.055-.055a3 3 0 0 1 4.895 3.27c-.151.365-.372.696-.65.974l-.056.055a.65.65 0 0 0-.127.714c.028.064.05.13.064.2a.65.65 0 0 0 .534.284H21a3 3 0 1 1 0 6h-.087a.65.65 0 0 0-.594.394l-.004.01a.65.65 0 0 0 .127.714l.055.055a3.002 3.002 0 0 1 0 4.245l-.707-.708.707.707a3 3 0 0 1-4.244 0l-.055-.055a.65.65 0 0 0-.714-.127l-.01.004a.649.649 0 0 0-.394.593V21a3 3 0 0 1-6 0v-.076a.65.65 0 0 0-.425-.585.955.955 0 0 1-.059-.024.65.65 0 0 0-.714.127l-.054.055a3.002 3.002 0 1 1-4.245-4.244l.055-.055a.65.65 0 0 0 .127-.714l-.004-.01a.649.649 0 0 0-.594-.394H3a3 3 0 0 1 0-6h.076a.65.65 0 0 0 .585-.425l.024-.059a.65.65 0 0 0-.127-.714l-.055-.054a3 3 0 1 1 4.244-4.245l.055.055a.65.65 0 0 0 .714.127 1 1 0 0 1 .2-.064A.65.65 0 0 0 9 3.167V3A3 3 0 0 1 9.879.879Z"/>\n  </g>\n  <defs>\n    <clipPath id="a">\n      <path fill="#fff" d="M0 0h24v24H0z"/>\n    </clipPath>\n  </defs>\n</svg>\n',MUTE:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M11.433 4.099A1 1 0 0 1 12 5v14a1 1 0 0 1-1.625.78L5.65 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.65l4.725-3.78a1 1 0 0 1 1.058-.121ZM10 7.08l-3.375 2.7A1 1 0 0 1 6 10H3v4h3a1 1 0 0 1 .625.22L10 16.92V7.08ZM23.707 8.293a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414-1.414l6-6a1 1 0 0 1 1.414 0Z" clip-rule="evenodd"/>\n  <path fill-rule="evenodd" d="M16.293 8.293a1 1 0 0 1 1.414 0l6 6a1 1 0 0 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414Z" clip-rule="evenodd"/>\n</svg>\n',UNMUTE:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M11.433 4.099a1 1 0 0 1 .567.9v14a1 1 0 0 1-1.625.782L5.65 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.65l4.725-3.78a1 1 0 0 1 1.058-.121ZM10 7.08l-3.375 2.7A1 1 0 0 1 6 10H3v4h3a1 1 0 0 1 .625.22L10 16.92V7.08ZM18.363 4.223a1 1 0 0 1 1.414 0 11 11 0 0 1 0 15.554 1 1 0 1 1-1.414-1.414 9 9 0 0 0 0-12.726 1 1 0 0 1 0-1.414Zm-3.53 3.53a1 1 0 0 1 1.414 0 6 6 0 0 1 0 8.484 1 1 0 1 1-1.414-1.414 4 4 0 0 0 0-5.656 1 1 0 0 1 0-1.414Z" clip-rule="evenodd"/>\n</svg>\n',BURGER:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M2.358 12.045a1 1 0 0 1 1-1h18a1 1 0 0 1 0 2h-18a1 1 0 0 1-1-1ZM2.358 6.045a1 1 0 0 1 1-1h18a1 1 0 0 1 0 2h-18a1 1 0 0 1-1-1ZM2.358 18.045a1 1 0 0 1 1-1h18a1 1 0 0 1 0 2h-18a1 1 0 0 1-1-1Z" clip-rule="evenodd"/>\n</svg>\n',TILE:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">\n  <path fill-rule="evenodd" d="M18 5H6a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1ZM6 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3H6Z" clip-rule="evenodd"/>\n</svg>\n'};class d extends t{newGameButton=new s({className:"minesweeper__new-game-button",textContent:"new game"});scoreButton=new s({className:"button--icon",a11yLabel:"score"});themeButton=new s({className:"button--icon",a11yLabel:"theme"});soundButton=new s({className:"button--icon",a11yLabel:"sound"});burgerButton=new s({className:"button--icon",a11yLabel:"burger"});constructor({className:e}){super({className:[e,"control-panel"]});const n=localStorage.getItem("sliderPosition");this.tileSettingButton=new i({icon:{template:r.TILE},min:0,max:2,value:n||0}),this.mineSettingButton=new i({icon:{template:r.MINE},min:10,max:99,value:n||10}),this.scoreButton.append(new o({template:r.LIST})),this.burgerButton.append(new o({template:r.BURGER}));const s=new t({className:"minesweeper__button-group"});s.append(this.newGameButton,this.tileSettingButton,this.mineSettingButton);const a=new l({tagName:"ul",className:"minesweeper__button-list",items:[this.scoreButton,this.themeButton,this.soundButton,this.burgerButton]});this.append(s,a)}setThemeButtonIcon(e){this.themeButton.switchIcon(e)}setSoundButtonIcon(e){this.soundButton.switchIcon(e)}getTileSettingSliderValue(){return this.tileSettingButton.getSliderValue()}getMineSettingSliderValue(){return this.mineSettingButton.getSliderValue()}setNewGameButtonClickHandler(e){this.newGameButton.getElement().addEventListener("click",e)}setTileSettingsButtonClickHandler(e){this.tileSettingButton.getElement().addEventListener("input",e)}setMineSettingsButtonClickHandler(e){this.mineSettingButton.getElement().addEventListener("input",e)}setScoreButtonClickHandler(e){this.scoreButton.getElement().addEventListener("click",e)}setThemeButtonClickHandler(e){this.themeButton.getElement().addEventListener("click",e)}setSoundButtonClickHandler(e){this.soundButton.getElement().addEventListener("click",e)}}const h="light",m="dark",c=[10,15,25],u="lose",p=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]],g="tileSliderPosition",C="mineSliderPosition";class v{controlPanelComponent=new d({className:"minesweeper__control-panel"});constructor(e,t,n,s,a,o){this.settings=e,this.container=t,this.onStartGameButtonClickHandler=n,this.onThemeChangeHandler=s,this.onSoundChangeHandler=a,this.onScoreTableButtonClickHandler=o}render(){this.setHandlers(),this.container.append(this.controlPanelComponent),this.switchSoundButtonIcon(),this.switchThemeButtonIcon();const e=localStorage.getItem(g)||0;this.controlPanelComponent.tileSettingButton.setSliderValue(e),this.controlPanelComponent.tileSettingButton.setOutputValue(c[e]);const t=localStorage.getItem(C)||10;this.controlPanelComponent.mineSettingButton.setSliderValue(t),this.controlPanelComponent.mineSettingButton.setOutputValue(t),window.addEventListener("beforeunload",(()=>{localStorage.setItem(g,this.controlPanelComponent.getTileSettingSliderValue()),localStorage.setItem(C,this.controlPanelComponent.getMineSettingSliderValue())}))}setHandlers(){this.controlPanelComponent.setNewGameButtonClickHandler((()=>{this.onStartGameButtonClickHandler()})),this.controlPanelComponent.setTileSettingsButtonClickHandler((()=>{const e=this.controlPanelComponent.getTileSettingSliderValue();localStorage.setItem(g,e),this.controlPanelComponent.tileSettingButton.setOutputValue(c[e])})),this.controlPanelComponent.setMineSettingsButtonClickHandler((()=>{const e=this.controlPanelComponent.getMineSettingSliderValue();localStorage.setItem(C,e),this.controlPanelComponent.mineSettingButton.setOutputValue(e)})),this.controlPanelComponent.setScoreButtonClickHandler((()=>{this.onScoreTableButtonClickHandler()})),this.controlPanelComponent.setThemeButtonClickHandler((()=>{this.onThemeChangeHandler(),this.switchThemeButtonIcon()})),this.controlPanelComponent.setSoundButtonClickHandler((()=>{this.onSoundChangeHandler(),this.switchSoundButtonIcon()}))}switchSoundButtonIcon(){const e=new o({template:!1===this.settings.mute?r.MUTE:r.UNMUTE});this.controlPanelComponent.setSoundButtonIcon(e)}switchThemeButtonIcon(){const e=new o({template:this.settings.theme===h?r.NIGHT:r.DAY});this.controlPanelComponent.setThemeButtonIcon(e)}getTileSettingSliderValue(){return this.controlPanelComponent.getTileSettingSliderValue()}getMineSettingSliderValue(){return this.controlPanelComponent.getMineSettingSliderValue()}}class S extends t{constructor({labelText:e,className:n=[]}){super({tagName:"p",className:[n,"info-field"]});const s=new t({tagName:"span",textContent:e,className:"info-field__label"});this.valueComponent=new t({tagName:"output",textContent:"00",className:"info-field__value"}),this.append(s,this.valueComponent)}setValue(e){this.valueComponent.getElement().textContent=e}}class w extends t{constructor({className:e}){super({className:[e,"timer"]}),this.minutesComponent=new S({labelText:"minutes",className:"timer__minutes"}),this.secondsComponent=new S({labelText:"seconds",className:"timer__seconds"}),this.append(this.minutesComponent,this.secondsComponent),this.append(new t({tagName:"p",className:"timer__divider",textContent:":"}))}setTime({minutes:e,seconds:t}){this.minutesComponent.setValue(e),this.secondsComponent.setValue(t)}}class f extends t{infoBar=null;board=null;timer=null;time=null;steps=null;unmarkedMines=null;constructor({className:e}){super({className:[e,"playground"]}),this.steps=new S({labelText:"moves"}),this.timer=new w({className:"minesweeper__timer"}),this.time=new S({labelText:"seconds"}),this.unmarkedMines=new S({labelText:"unmarked"}),this.infoBar=new t({className:"minesweeper__info-bar"}),this.infoBar.append(this.time,this.steps,this.unmarkedMines),this.board=new t({className:["minesweeper__board","board"]}),this.append(this.infoBar,this.board)}setStepsComponentValue(e){const t=e.toString().padStart(2,"0");this.steps.setValue(t)}setTimerValue(e){const t={minutes:Math.floor(e/60).toString().padStart(2,"0"),seconds:(e%60).toString().padStart(2,"0")};this.timer.setTime(t)}setTimeValue(e){const t=e.toString().padStart(2,"0");this.time.setValue(t)}setUnmarkedMinesValue(e){let t;e<0&&e>-10?(t=e.toString().split(""),t=[].concat(t[0],"0",t[1]).join("")):t=e.toString().padStart(2,"0"),this.unmarkedMines.setValue(t)}setContextHandler(e){this.node.addEventListener("contextmenu",e)}}const b=["tile__content--color-variant-1st","tile__content--color-variant-2nd","tile__content--color-variant-3rd"];class M extends t{constructor({cellData:e,className:n=[]}){super({className:[n,"tile"]});const{id:s,isMarked:a,isCovered:i,value:l}=e;if(this.isMarked=a,this.isCovered=i,this.value=l,this.id=s,"*"===this.value)this.content=new t({tagName:"span",className:"tile__content"}),this.content.append(new o({template:r.MINE}));else{let e;if("*"===this.value)e="";else{const t=b.length,n=this.value%t;e=b[n]}this.content=new t({tagName:"span",className:[e,"tile__content"],textContent:0===this.value?"":this.value})}this.append(this.content),i&&(this.cover=new t({className:"tile__cover"}),this.isMarked&&this.cover.append(new o({template:r.MARK})),this.append(this.cover))}setLeftClickHandler(e){this.leftClickHandler=e,this.node.addEventListener("click",this.leftClickHandler)}setRightClickHandler(e){this.rigthClickHandler=e,this.node.addEventListener("contextmenu",this.rigthClickHandler)}removeHandlers(){this.node.removeEventListener("click",this.leftClickHandler),this.node.removeEventListener("contextmenu",this.rigthClickHandler)}}function H(e,t){return Math.round(e+Math.random()*(t-e))}const N="minesweeperModel",k="*";class x{cells=[];onDataChangeHandler=null;setModel(e,t,n){const s=!!this.loadFromStorage();this.cells=s?JSON.parse(localStorage.getItem(N)):this.generateCellData(e,t,n)}saveInStorage(){localStorage.setItem(N,JSON.stringify(this.cells))}eraseFromStorage(){localStorage.removeItem(N)}loadFromStorage(){return localStorage.getItem(N)}getData(){return this.cells}generateCellData({boardSize:e,boardMineCount:t},n,s){const a=new Array(e).fill(0).map((()=>new Array(e).fill(0)));if(n){let e=0;return a.map((t=>t.map((t=>{const n={id:e,isMarked:!1,isCovered:!0,value:t};return e+=1,n}))))}let o=0;for(;o<t;){const t=H(0,e-1),n=H(0,e-1);a[t][n]!==k&&(t===s.lineIndex&&n===s.cellIndex||(a[t][n]=k,o+=1))}let i=0;return a.map(((t,n)=>t.map(((t,s)=>{if(t===k){const e={id:i,isMarked:!1,isCovered:!0,value:t};return i+=1,e}let o=0;p.forEach((t=>{let i;n+t[0]>=0&&n+t[0]<e&&s+t[1]>=0&&s+t[1]<e&&(i=a[n+t[0]][s+t[1]]),o+=i===k?1:0}));const l={id:i,isMarked:!1,isCovered:!0,value:o};return i+=1,l}))))}updateData(e){let t;for(let n of this.cells)if(t=n.find((t=>t.id===e.id)),t)break;for(let n in e)t[n]=void 0!==e[n]?e[n]:t[n];this.onDataChangeHandler(t)}setOnDataChangeHandler(e){this.onDataChangeHandler=e}}function T(e,t){let n,s;for(let a=0;a<e.length;a++)for(let o=0;o<e.length;o++)if(e[a][o]===t){n=a,s=o;break}return{lineIndex:n,cellIndex:s}}const B=[e.p+"assets\\audio/click-sound-variant-1.mp3",e.p+"assets\\audio/click-sound-variant-2.mp3",e.p+"assets\\audio/win-sound.mp3",e.p+"assets\\audio/lose-sound.mp3"];class I extends t{muted=!1;constructor({className:e=[],src:n=B}={}){super({className:[e,"audio"],tagName:"audio"}),this.sounds=n,this.components=this.sounds.map((e=>{const n=new t({tagName:"audio"});return n.getElement().src=e,n}))}playLeftClickSound(){const e=this.components[1];this.playSound(e)}playRightClickSound(){const e=this.components[0];this.playSound(e)}playWinSound(){const e=this.components[2];this.playSound(e)}playLoseSound(){const e=this.components[3];this.playSound(e)}playSound(e){e.getElement().muted=this.muted,e.getElement().play()}mute(){this.muted=!0}unmute(){this.muted=!1}}const E="timer",y="steps",V="unmarkedMinesCounter";class _{playground=null;tileComponents=[];steps=0;timer=0;time=0;unmarkedMinesCounter=0;intervalId=null;isGameStarted=!1;soundEffectsComponent=new I;constructor(e,t,n){this.settings=e,this.container=t,this.onEndGameHandler=n,this.dataChangeHandler=this.dataChangeHandler.bind(this),this.onStartGameHandler=this.onStartGameHandler.bind(this),this.model=new x}render(){window.addEventListener("beforeunload",(()=>{this.isGameStarted&&(this.model.saveInStorage(),localStorage.setItem(E,this.timer),localStorage.setItem(y,this.steps),localStorage.setItem(V,this.unmarkedMinesCounter))}));if(this.model.loadFromStorage())return void this.startGame();this.isGameStarted=!1,this.model.setModel(this.settings,!0),this.model.setOnDataChangeHandler(this.onStartGameHandler);const e=this.model.getData();this.createTileComponents(e),this.renderPlayground()}createTileComponents(e){this.tileComponents=e.map((e=>e.map((e=>this.createTileComponent(e)))))}renderPlayground(){this.playground&&this.playground.destroy(),this.playground=new f({className:"minesweeper__playground"}),this.tileComponents.forEach((e=>{const n=new t({className:"minesweeper__tile-row"});for(let t of e)n.append(t);this.playground.board.append(n)})),this.container.append(this.playground),this.playground.setContextHandler((e=>e.preventDefault()))}startGame(e){this.isGameStarted=!0;const t=T(this.tileComponents,e);this.model.setModel(this.settings,!1,t),this.model.setOnDataChangeHandler(this.dataChangeHandler);const n=this.model.getData();this.createTileComponents(n),this.renderPlayground();const s=localStorage.getItem(E),a=localStorage.getItem(y),o=localStorage.getItem(V);this.timer=+s||0,this.steps=+a||0,this.unmarkedMinesCounter=+o||this.settings.boardMineCount,this.playground.setTimerValue(this.timer),this.playground.setTimeValue(this.timer),this.playground.setStepsComponentValue(this.steps),this.playground.setUnmarkedMinesValue(this.unmarkedMinesCounter),this.applySoundSettings(),this.startTimer(),this.model.saveInStorage()}dataChangeHandler(e){this.rerenderTile(e)}onStartGameHandler(e){this.startGame(e)}createTileComponent(e){let t=new M({cellData:e});return t.setLeftClickHandler((()=>{if(!this.isGameStarted){const e=T(this.tileComponents,t);this.startGame(t),t=this.tileComponents[e.lineIndex][e.cellIndex]}t.isCovered&&!t.isMarked&&(this.steps++,this.setStepsField(),this.soundEffectsComponent.playLeftClickSound()),this.uncoverTile(t),"*"===t.value&&(this.showMines(),this.stopPlaygroundEvents(),this.isGameStarted=!1,localStorage.removeItem(y),localStorage.removeItem(E),localStorage.removeItem(V),this.model.eraseFromStorage(),this.onEndGameHandler(u),this.soundEffectsComponent.playLoseSound());0===this.tileComponents.flat(1).filter((e=>e.isCovered&&"*"!==e.value)).length&&(this.stopPlaygroundEvents(),this.isGameStarted=!1,localStorage.removeItem(y),localStorage.removeItem(E),localStorage.removeItem(V),this.model.eraseFromStorage(),this.onEndGameHandler("win",this.steps,this.timer),this.soundEffectsComponent.playWinSound()),this.unmarkedMinesCounter=this.settings.boardMineCount-this.tileComponents.flat(1).filter((e=>!0===e.isMarked)).length,this.playground.setUnmarkedMinesValue(this.unmarkedMinesCounter)})),t.setRightClickHandler((e=>{e.preventDefault(),this.isGameStarted&&t.isCovered&&(this.soundEffectsComponent.playRightClickSound(),this.model.updateData({id:t.id,isMarked:!t.isMarked}),this.unmarkedMinesCounter=this.settings.boardMineCount-this.tileComponents.flat(1).filter((e=>!0===e.isMarked)).length,this.playground.setUnmarkedMinesValue(this.unmarkedMinesCounter))})),t}restartGame(){this.model.eraseFromStorage(),this.stopTimer(),localStorage.removeItem(E),localStorage.removeItem(y),localStorage.removeItem(V),this.render()}rerenderTile(e){let t;for(let n of this.tileComponents)if(t=n.find((t=>t.id===e.id)),t)break;const{lineIndex:n,cellIndex:s}=T(this.tileComponents,t),a=this.createTileComponent(e);t.node.replaceWith(a.node),t.destroy(),t=null,this.tileComponents[n][s]=a}uncoverTile(e){if(0===e.value&&e.isCovered&&!1===e.isMarked){const t=T(this.tileComponents,e),{cellIndex:n,lineIndex:s}=t;this.model.updateData({id:e.id,isCovered:!1,isMarked:!1});const a=this.tileComponents.length;p.forEach((e=>{if(s+e[0]>=0&&s+e[0]<a&&n+e[1]>=0&&n+e[1]<a){const t=this.tileComponents[s+e[0]][n+e[1]];this.uncoverTile(t)}}))}else e.isMarked||this.model.updateData({id:e.id,isCovered:!1,isMarked:!1})}showMines(){this.tileComponents.flat(1).filter((e=>"*"===e.value)).forEach((e=>this.uncoverTile(e)))}stopPlaygroundEvents(){this.tileComponents.flat(1).forEach((e=>e.removeHandlers()))}applySoundSettings(){this.settings.mute?this.soundEffectsComponent.mute():this.soundEffectsComponent.unmute()}setTimerField({minutes:e,seconds:t}){this.playground.getTimerComponent().setTime({minutes:e,seconds:t})}setStepsField(){this.playground.setStepsComponentValue(this.steps)}stopTimer(){clearInterval(this.intervalId)}startTimer(){this.intervalId=setInterval((()=>{this.timer+=1,this.playground.setTimerValue(this.timer),this.playground.setTimeValue(this.timer)}),1e3)}getModel(){return this.model}}class G extends t{constructor({className:e=[],textContent:n}){super({className:[e,"modal"]}),this.background=new t({className:"modal__background"});const a=new t({className:"modal__container"}),o=new t({className:"modal__text",textContent:n});this.submitButton=new s({className:"modal__button",textContent:"OK"}),a.append(o,this.submitButton),this.background.append(a),this.append(this.background)}setSubmitClickHandler(e){this.submitButton.getElement().addEventListener("click",e)}}class L extends t{constructor({className:e=[],items:n}={}){super({className:[e,"modal"],tagName:"article"});let a=null;a=n?new l({tagName:"ul",className:"modal__list",items:n}):new t({className:"modal__text",textContent:"No records"}),this.background=new t({className:"modal__background"});const o=new t({className:"modal__container"}),i=new t({tagName:"h1",className:"modal__title",textContent:"score table"});this.submitButton=new s({className:"modal__button",textContent:"OK"}),o.append(i,a,this.submitButton),this.background.append(o),this.append(this.background)}setSubmitClickHandler(e){this.submitButton.getElement().addEventListener("click",e)}}const P={boardSize:10,boardMineCount:10,theme:h,mute:!1},Z="scoreTable",A="settings";const D=new t({className:"page-wrapper"});document.body.append(D.getElement());new class{savedSettings=JSON.parse(localStorage.getItem(A));settings=this.savedSettings||P;minesweeperComponent=new n;controlPanelController=new v(this.settings,this.minesweeperComponent,this.onStartGameButtonClickHandler.bind(this),this.onThemeChangeHandler.bind(this),this.onSoundChangeHandler.bind(this),this.onScoreTableButtonClickHandler.bind(this));playgroundController=new _(this.settings,this.minesweeperComponent,this.onGameEndHandler.bind(this));timer=null;intervalId=null;scoreTable=JSON.parse(localStorage.getItem(Z))||[];constructor(e){this.container=e}render(){switch(this.container.append(this.minesweeperComponent),this.controlPanelController.render(),this.playgroundController.render(),this.settings.theme){case"light":this.minesweeperComponent.addClass(`theme-${h}`);break;case"dark":this.minesweeperComponent.addClass(`theme-${m}`)}window.addEventListener("beforeunload",(()=>{localStorage.setItem(A,JSON.stringify(this.settings))}))}onThemeChangeHandler(){const e=`theme-${this.settings.theme}`;this.minesweeperComponent.toggleClass(e),this.settings.theme=this.settings.theme===h?m:h;const t=`theme-${this.settings.theme}`;this.minesweeperComponent.toggleClass(t)}onSoundChangeHandler(){this.settings.mute=!this.settings.mute,this.playgroundController.applySoundSettings()}onScoreTableButtonClickHandler(){if(this.scoreTable.length>0){const e=this.scoreTable.map((e=>{const{name:n,time:s,steps:a}=e;return new t({textContent:`${n} | ${s} | ${a} moves`})}));this.scoreModal=new L({items:e})}else this.scoreModal=new L;this.scoreModal.setSubmitClickHandler(this.onScoreTableSubmitClickHandler.bind(this)),this.minesweeperComponent.append(this.scoreModal)}onStartGameButtonClickHandler(){const e=this.controlPanelController.getTileSettingSliderValue(),t=this.controlPanelController.getMineSettingSliderValue();this.settings.boardSize=c[e],this.settings.boardMineCount=t,this.playgroundController.restartGame()}onEndGameSubmitClickHandler(){this.endGameModal.destroy(),this.endGameModal=null}onScoreTableSubmitClickHandler(){this.scoreModal.destroy(),this.scoreModal=null}onGameEndHandler(e,t,n){switch(this.playgroundController.stopTimer(),e){case"win":{const e=Math.floor(n/60),s=n%60,a=""+(0===e?"":`${e}  ${e>1?"minutes":"minute"}`),o=""+(0===s?"":`${s}  ${s>1?"seconds":"second"}`),i="Hooray! You found all mines in ## seconds and #N moves!".replace("in ## seconds and",""===a&&""===o?"instantly in":`in ${a} ${o} and`).replace("#N",t);this.endGameModal=new G({textContent:i});const l={name:(new Date).toLocaleTimeString("en-US",{hour12:!1}),time:`${e.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`,steps:t};this.scoreTable.unshift(l),this.scoreTable.length=10,this.scoreTable=this.scoreTable.filter((e=>null!==e)),localStorage.setItem(Z,JSON.stringify(this.scoreTable));break}case u:this.endGameModal=new G({textContent:"Game over. Try again"})}this.endGameModal.setSubmitClickHandler(this.onEndGameSubmitClickHandler.bind(this)),this.minesweeperComponent.append(this.endGameModal)}}(D).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,